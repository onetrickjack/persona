# This file is automatically generated by ebnf version 2.0.0
# Derived from etc/sparql.ebnf
module Meta
  RULES = [
    EBNF::Rule.new(:QueryUnit, "1", [:opt, :Query]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Query, "2", [:seq, :Prologue, :_Query_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Query_1, "2.1", [:alt, :SelectQuery, :ConstructQuery, :DescribeQuery, :AskQuery]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:UpdateUnit, "3", [:seq, :Update]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Prologue, "4", [:star, :_Prologue_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Prologue_1, "4.1", [:alt, :BaseDecl, :PrefixDecl]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BaseDecl, "5", [:seq, "BASE", :IRIREF]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PrefixDecl, "6", [:seq, "PREFIX", :PNAME_NS, :IRIREF]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:SelectQuery, "7", [:seq, :SelectClause, :_SelectQuery_1, :WhereClause, :SolutionModifier, :ValuesClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SelectQuery_1, "7.1", [:star, :DatasetClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:SubSelect, "8", [:seq, :SelectClause, :WhereClause, :SolutionModifier, :ValuesClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:SelectClause, "9", [:seq, "SELECT", :_SelectClause_1, :_SelectClause_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SelectClause_1, "9.1", [:opt, :_SelectClause_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SelectClause_3, "9.3", [:alt, "DISTINCT", "REDUCED"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SelectClause_2, "9.2", [:alt, :_SelectClause_4, "*"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SelectClause_4, "9.4", [:plus, :_SelectClause_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SelectClause_5, "9.5", [:alt, :Var, :_SelectClause_6]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SelectClause_6, "9.6", [:seq, "(", :Expression, "AS", :Var, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ConstructQuery, "10", [:seq, "CONSTRUCT", :_ConstructQuery_1, :ValuesClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructQuery_1, "10.1", [:alt, :_ConstructQuery_2, :_ConstructQuery_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructQuery_2, "10.2", [:seq, :ConstructTemplate, :_ConstructQuery_4, :WhereClause, :SolutionModifier]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructQuery_4, "10.4", [:star, :DatasetClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructQuery_3, "10.3", [:seq, :_ConstructQuery_5, "WHERE", "{", :_ConstructQuery_6, "}", :SolutionModifier]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructQuery_5, "10.5", [:star, :DatasetClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructQuery_6, "10.6", [:opt, :TriplesTemplate]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DescribeQuery, "11", [:seq, "DESCRIBE", :_DescribeQuery_1, :_DescribeQuery_2, :_DescribeQuery_3, :SolutionModifier, :ValuesClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DescribeQuery_1, "11.1", [:alt, :_DescribeQuery_4, "*"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DescribeQuery_4, "11.4", [:plus, :VarOrIri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DescribeQuery_2, "11.2", [:star, :DatasetClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DescribeQuery_3, "11.3", [:opt, :WhereClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:AskQuery, "12", [:seq, "ASK", :_AskQuery_1, :WhereClause, :ValuesClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AskQuery_1, "12.1", [:star, :DatasetClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DatasetClause, "13", [:seq, "FROM", :_DatasetClause_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DatasetClause_1, "13.1", [:alt, :DefaultGraphClause, :NamedGraphClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DefaultGraphClause, "14", [:seq, :SourceSelector]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NamedGraphClause, "15", [:seq, "NAMED", :SourceSelector]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:SourceSelector, "16", [:seq, :iri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:WhereClause, "17", [:seq, :_WhereClause_1, :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_WhereClause_1, "17.1", [:opt, "WHERE"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:SolutionModifier, "18", [:seq, :_SolutionModifier_1, :_SolutionModifier_2, :_SolutionModifier_3, :_SolutionModifier_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SolutionModifier_1, "18.1", [:opt, :GroupClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SolutionModifier_2, "18.2", [:opt, :HavingClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SolutionModifier_3, "18.3", [:opt, :OrderClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SolutionModifier_4, "18.4", [:opt, :LimitOffsetClauses]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GroupClause, "19", [:seq, "GROUP", "BY", :_GroupClause_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupClause_1, "19.1", [:plus, :GroupCondition]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GroupCondition, "20", [:alt, :BuiltInCall, :FunctionCall, :_GroupCondition_1, :Var]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupCondition_1, "20.1", [:seq, "(", :Expression, :_GroupCondition_2, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupCondition_2, "20.2", [:opt, :_GroupCondition_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupCondition_3, "20.3", [:seq, "AS", :Var]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:HavingClause, "21", [:seq, "HAVING", :_HavingClause_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_HavingClause_1, "21.1", [:plus, :HavingCondition]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:HavingCondition, "22", [:seq, :Constraint]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:OrderClause, "23", [:seq, "ORDER", "BY", :_OrderClause_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_OrderClause_1, "23.1", [:plus, :OrderCondition]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:OrderCondition, "24", [:alt, :_OrderCondition_1, :_OrderCondition_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_OrderCondition_1, "24.1", [:seq, :_OrderCondition_3, :BrackettedExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_OrderCondition_3, "24.3", [:alt, "ASC", "DESC"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_OrderCondition_2, "24.2", [:alt, :Constraint, :Var]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:LimitOffsetClauses, "25", [:alt, :_LimitOffsetClauses_1, :_LimitOffsetClauses_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LimitOffsetClauses_1, "25.1", [:seq, :LimitClause, :_LimitOffsetClauses_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LimitOffsetClauses_3, "25.3", [:opt, :OffsetClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LimitOffsetClauses_2, "25.2", [:seq, :OffsetClause, :_LimitOffsetClauses_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LimitOffsetClauses_4, "25.4", [:opt, :LimitClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:LimitClause, "26", [:seq, "LIMIT", :INTEGER]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:OffsetClause, "27", [:seq, "OFFSET", :INTEGER]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ValuesClause, "28", [:opt, :_ValuesClause_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ValuesClause_1, "28.1", [:seq, "VALUES", :DataBlock]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Update, "29", [:seq, :Prologue, :_Update_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Update_1, "29.1", [:opt, :_Update_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Update_2, "29.2", [:seq, :Update1, :_Update_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Update_3, "29.3", [:opt, :_Update_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Update_4, "29.4", [:seq, ";", :Update]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Update1, "30", [:alt, :Load, :Clear, :Drop, :Add, :Move, :Copy, :Create, :InsertData, :DeleteData, :DeleteWhere, :Modify]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Load, "31", [:seq, "LOAD", :_Load_1, :iri, :_Load_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Load_1, "31.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Load_2, "31.2", [:opt, :_Load_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Load_3, "31.3", [:seq, "INTO", :GraphRef]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Clear, "32", [:seq, "CLEAR", :_Clear_1, :GraphRefAll]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Clear_1, "32.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Drop, "33", [:seq, "DROP", :_Drop_1, :GraphRefAll]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Drop_1, "33.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Create, "34", [:seq, "CREATE", :_Create_1, :GraphRef]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Create_1, "34.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Add, "35", [:seq, "ADD", :_Add_1, :GraphOrDefault, "TO", :GraphOrDefault]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Add_1, "35.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Move, "36", [:seq, "MOVE", :_Move_1, :GraphOrDefault, "TO", :GraphOrDefault]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Move_1, "36.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Copy, "37", [:seq, "COPY", :_Copy_1, :GraphOrDefault, "TO", :GraphOrDefault]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Copy_1, "37.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:InsertData, "38", [:seq, "INSERT DATA", :QuadData]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DeleteData, "39", [:seq, "DELETE DATA", :QuadData]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DeleteWhere, "40", [:seq, "DELETE WHERE", :QuadPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Modify, "41", [:seq, :_Modify_1, :_Modify_2, :_Modify_3, "WHERE", :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Modify_1, "41.1", [:opt, :_Modify_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Modify_4, "41.4", [:seq, "WITH", :iri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Modify_2, "41.2", [:alt, :_Modify_5, :InsertClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Modify_5, "41.5", [:seq, :DeleteClause, :_Modify_6]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Modify_6, "41.6", [:opt, :InsertClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Modify_3, "41.3", [:star, :UsingClause]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DeleteClause, "42", [:seq, "DELETE", :QuadPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:InsertClause, "43", [:seq, "INSERT", :QuadPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:UsingClause, "44", [:seq, "USING", :_UsingClause_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_UsingClause_1, "44.1", [:alt, :iri, :_UsingClause_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_UsingClause_2, "44.2", [:seq, "NAMED", :iri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphOrDefault, "45", [:alt, "DEFAULT", :_GraphOrDefault_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GraphOrDefault_1, "45.1", [:seq, :_GraphOrDefault_2, :iri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GraphOrDefault_2, "45.2", [:opt, "GRAPH"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphRef, "46", [:seq, "GRAPH", :iri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphRefAll, "47", [:alt, :GraphRef, "DEFAULT", "NAMED", "ALL"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:QuadPattern, "48", [:seq, "{", :Quads, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:QuadData, "49", [:seq, "{", :Quads, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Quads, "50", [:seq, :_Quads_1, :_Quads_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Quads_1, "50.1", [:opt, :TriplesTemplate]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Quads_2, "50.2", [:star, :_Quads_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Quads_3, "50.3", [:seq, :QuadsNotTriples, :_Quads_4, :_Quads_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Quads_4, "50.4", [:opt, "."]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Quads_5, "50.5", [:opt, :TriplesTemplate]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:QuadsNotTriples, "51", [:seq, "GRAPH", :VarOrIri, "{", :_QuadsNotTriples_1, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_QuadsNotTriples_1, "51.1", [:opt, :TriplesTemplate]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:TriplesTemplate, "52", [:seq, :TriplesSameSubject, :_TriplesTemplate_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesTemplate_1, "52.1", [:opt, :_TriplesTemplate_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesTemplate_2, "52.2", [:seq, ".", :_TriplesTemplate_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesTemplate_3, "52.3", [:opt, :TriplesTemplate]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GroupGraphPattern, "53", [:seq, "{", :_GroupGraphPattern_1, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupGraphPattern_1, "53.1", [:alt, :SubSelect, :GroupGraphPatternSub]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GroupGraphPatternSub, "54", [:seq, :_GroupGraphPatternSub_1, :_GroupGraphPatternSub_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupGraphPatternSub_1, "54.1", [:opt, :TriplesBlock]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupGraphPatternSub_2, "54.2", [:star, :_GroupGraphPatternSub_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupGraphPatternSub_3, "54.3", [:seq, :GraphPatternNotTriples, :_GroupGraphPatternSub_4, :_GroupGraphPatternSub_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupGraphPatternSub_4, "54.4", [:opt, "."]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupGraphPatternSub_5, "54.5", [:opt, :TriplesBlock]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:TriplesBlock, "55", [:seq, :TriplesSameSubjectPath, :_TriplesBlock_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesBlock_1, "55.1", [:opt, :_TriplesBlock_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesBlock_2, "55.2", [:seq, ".", :_TriplesBlock_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesBlock_3, "55.3", [:opt, :TriplesBlock]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphPatternNotTriples, "56", [:alt, :GroupOrUnionGraphPattern, :OptionalGraphPattern, :MinusGraphPattern, :GraphGraphPattern, :ServiceGraphPattern, :Filter, :Bind, :InlineData]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:OptionalGraphPattern, "57", [:seq, "OPTIONAL", :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphGraphPattern, "58", [:seq, "GRAPH", :VarOrIri, :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ServiceGraphPattern, "59", [:seq, "SERVICE", :_ServiceGraphPattern_1, :VarOrIri, :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ServiceGraphPattern_1, "59.1", [:opt, "SILENT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Bind, "60", [:seq, "BIND", "(", :Expression, "AS", :Var, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:InlineData, "61", [:seq, "VALUES", :DataBlock]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DataBlock, "62", [:alt, :InlineDataOneVar, :InlineDataFull]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:InlineDataOneVar, "63", [:seq, :Var, "{", :_InlineDataOneVar_1, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataOneVar_1, "63.1", [:star, :DataBlockValue]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:InlineDataFull, "64", [:seq, :_InlineDataFull_1, "{", :_InlineDataFull_2, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataFull_1, "64.1", [:alt, :NIL, :_InlineDataFull_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataFull_3, "64.3", [:seq, "(", :_InlineDataFull_4, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataFull_4, "64.4", [:star, :Var]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataFull_2, "64.2", [:star, :_InlineDataFull_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataFull_5, "64.5", [:alt, :_InlineDataFull_6, :NIL]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataFull_6, "64.6", [:seq, "(", :_InlineDataFull_7, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_InlineDataFull_7, "64.7", [:star, :DataBlockValue]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DataBlockValue, "65", [:alt, :iri, :RDFLiteral, :NumericLiteral, :BooleanLiteral, "UNDEF"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:MinusGraphPattern, "66", [:seq, "MINUS", :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GroupOrUnionGraphPattern, "67", [:seq, :GroupGraphPattern, :_GroupOrUnionGraphPattern_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupOrUnionGraphPattern_1, "67.1", [:star, :_GroupOrUnionGraphPattern_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_GroupOrUnionGraphPattern_2, "67.2", [:seq, "UNION", :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Filter, "68", [:seq, "FILTER", :Constraint]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Constraint, "69", [:alt, :BrackettedExpression, :BuiltInCall, :FunctionCall]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:FunctionCall, "70", [:seq, :iri, :ArgList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ArgList, "71", [:alt, :NIL, :_ArgList_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ArgList_1, "71.1", [:seq, "(", :_ArgList_2, :Expression, :_ArgList_3, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ArgList_2, "71.2", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ArgList_3, "71.3", [:star, :_ArgList_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ArgList_4, "71.4", [:seq, ",", :Expression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ExpressionList, "72", [:alt, :NIL, :_ExpressionList_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ExpressionList_1, "72.1", [:seq, "(", :Expression, :_ExpressionList_2, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ExpressionList_2, "72.2", [:star, :_ExpressionList_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ExpressionList_3, "72.3", [:seq, ",", :Expression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ConstructTemplate, "73", [:seq, "{", :_ConstructTemplate_1, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructTemplate_1, "73.1", [:opt, :ConstructTriples]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ConstructTriples, "74", [:seq, :TriplesSameSubject, :_ConstructTriples_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructTriples_1, "74.1", [:opt, :_ConstructTriples_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructTriples_2, "74.2", [:seq, ".", :_ConstructTriples_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConstructTriples_3, "74.3", [:opt, :ConstructTriples]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:TriplesSameSubject, "75", [:alt, :_TriplesSameSubject_1, :_TriplesSameSubject_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesSameSubject_1, "75.1", [:seq, :VarOrTerm, :PropertyListNotEmpty]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesSameSubject_2, "75.2", [:seq, :TriplesNode, :PropertyList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PropertyList, "76", [:opt, :PropertyListNotEmpty]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PropertyListNotEmpty, "77", [:seq, :Verb, :ObjectList, :_PropertyListNotEmpty_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmpty_1, "77.1", [:star, :_PropertyListNotEmpty_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmpty_2, "77.2", [:seq, ";", :_PropertyListNotEmpty_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmpty_3, "77.3", [:opt, :_PropertyListNotEmpty_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmpty_4, "77.4", [:seq, :Verb, :ObjectList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Verb, "78", [:alt, :VarOrIri, "a"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ObjectList, "79", [:seq, :Object, :_ObjectList_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ObjectList_1, "79.1", [:star, :_ObjectList_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ObjectList_2, "79.2", [:seq, ",", :Object]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Object, "80", [:seq, :GraphNode]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:TriplesSameSubjectPath, "81", [:alt, :_TriplesSameSubjectPath_1, :_TriplesSameSubjectPath_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesSameSubjectPath_1, "81.1", [:seq, :VarOrTerm, :PropertyListNotEmptyPath]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_TriplesSameSubjectPath_2, "81.2", [:seq, :TriplesNode, :PropertyListPath]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PropertyListPath, "82", [:opt, :PropertyListNotEmpty]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PropertyListNotEmptyPath, "83", [:seq, :_PropertyListNotEmptyPath_1, :ObjectList, :_PropertyListNotEmptyPath_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmptyPath_1, "83.1", [:alt, :VerbPath, :VerbSimple]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmptyPath_2, "83.2", [:star, :_PropertyListNotEmptyPath_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmptyPath_3, "83.3", [:seq, ";", :_PropertyListNotEmptyPath_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmptyPath_4, "83.4", [:opt, :_PropertyListNotEmptyPath_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmptyPath_5, "83.5", [:seq, :_PropertyListNotEmptyPath_6, :ObjectList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PropertyListNotEmptyPath_6, "83.6", [:alt, :VerbPath, :VerbSimple]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:VerbPath, "84", [:seq, :Path]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:VerbSimple, "85", [:seq, :Var]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ObjectListPath, "86", [:seq, :ObjectPath, :_ObjectListPath_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ObjectListPath_1, "86.1", [:star, :_ObjectListPath_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ObjectListPath_2, "86.2", [:seq, ",", :ObjectPath]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ObjectPath, "87", [:seq, :GraphNodePath]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Path, "88", [:seq, :PathAlternative]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathAlternative, "89", [:seq, :PathSequence, :_PathAlternative_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathAlternative_1, "89.1", [:star, :_PathAlternative_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathAlternative_2, "89.2", [:seq, "|", :PathSequence]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathSequence, "90", [:seq, :PathEltOrInverse, :_PathSequence_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathSequence_1, "90.1", [:star, :_PathSequence_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathSequence_2, "90.2", [:seq, "/", :PathEltOrInverse]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathElt, "91", [:seq, :PathPrimary, :_PathElt_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathElt_1, "91.1", [:opt, :PathMod]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathEltOrInverse, "92", [:alt, :PathElt, :_PathEltOrInverse_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathEltOrInverse_1, "92.1", [:seq, "^", :PathElt]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathMod, "93", [:alt, "*", "?", "+", :_PathMod_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_1, "93.1", [:seq, "{", :_PathMod_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_2, "93.2", [:alt, :_PathMod_3, :_PathMod_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_3, "93.3", [:seq, :Integer, :_PathMod_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_5, "93.5", [:alt, :_PathMod_6, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_6, "93.6", [:seq, ",", :_PathMod_7]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_7, "93.7", [:alt, "}", :_PathMod_8]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_8, "93.8", [:seq, :Integer, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathMod_4, "93.4", [:seq, ",", :Integer, "}"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathPrimary, "94", [:alt, :iri, "a", :_PathPrimary_1, :_PathPrimary_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathPrimary_1, "94.1", [:seq, "!", :PathNegatedPropertySet]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathPrimary_2, "94.2", [:seq, "(", :Path, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathNegatedPropertySet, "95", [:alt, :PathOneInPropertySet, :_PathNegatedPropertySet_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathNegatedPropertySet_1, "95.1", [:seq, "(", :_PathNegatedPropertySet_2, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathNegatedPropertySet_2, "95.2", [:opt, :_PathNegatedPropertySet_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathNegatedPropertySet_3, "95.3", [:seq, :PathOneInPropertySet, :_PathNegatedPropertySet_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathNegatedPropertySet_4, "95.4", [:star, :_PathNegatedPropertySet_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathNegatedPropertySet_5, "95.5", [:seq, "|", :PathOneInPropertySet]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PathOneInPropertySet, "96", [:alt, :iri, "a", :_PathOneInPropertySet_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathOneInPropertySet_1, "96.1", [:seq, "^", :_PathOneInPropertySet_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PathOneInPropertySet_2, "96.2", [:alt, :iri, "a"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Integer, "97", [:seq, :INTEGER]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:TriplesNode, "98", [:alt, :Collection, :BlankNodePropertyList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BlankNodePropertyList, "99", [:seq, "[", :PropertyListNotEmpty, "]"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:TriplesNodePath, "100", [:alt, :CollectionPath, :BlankNodePropertyListPath]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BlankNodePropertyListPath, "101", [:seq, "[", :PropertyListPathNotEmpty, "]"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Collection, "102", [:seq, "(", :_Collection_1, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Collection_1, "102.1", [:plus, :GraphNode]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:CollectionPath, "103", [:seq, "(", :_CollectionPath_1, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_CollectionPath_1, "103.1", [:plus, :GraphNodePath]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphNode, "104", [:alt, :VarOrTerm, :TriplesNode]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphNodePath, "105", [:alt, :VarOrTerm, :TriplesNodePath]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:VarOrTerm, "106", [:alt, :Var, :GraphTerm]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:VarOrIri, "107", [:alt, :Var, :iri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Var, "108", [:alt, :VAR1, :VAR2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:GraphTerm, "109", [:alt, :iri, :RDFLiteral, :NumericLiteral, :BooleanLiteral, :BlankNode, :NIL]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Expression, "110", [:seq, :ConditionalOrExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ConditionalOrExpression, "111", [:seq, :ConditionalAndExpression, :_ConditionalOrExpression_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConditionalOrExpression_1, "111.1", [:star, :_ConditionalOrExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConditionalOrExpression_2, "111.2", [:seq, "||", :ConditionalAndExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ConditionalAndExpression, "112", [:seq, :ValueLogical, :_ConditionalAndExpression_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConditionalAndExpression_1, "112.1", [:star, :_ConditionalAndExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ConditionalAndExpression_2, "112.2", [:seq, "&&", :ValueLogical]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ValueLogical, "113", [:seq, :RelationalExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:RelationalExpression, "114", [:seq, :NumericExpression, :_RelationalExpression_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_1, "114.1", [:opt, :_RelationalExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_2, "114.2", [:alt, :_RelationalExpression_3, :_RelationalExpression_4, :_RelationalExpression_5, :_RelationalExpression_6, :_RelationalExpression_7, :_RelationalExpression_8, :_RelationalExpression_9, :_RelationalExpression_10]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_3, "114.3", [:seq, "=", :NumericExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_4, "114.4", [:seq, "!=", :NumericExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_5, "114.5", [:seq, "<", :NumericExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_6, "114.6", [:seq, ">", :NumericExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_7, "114.7", [:seq, "<=", :NumericExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_8, "114.8", [:seq, ">=", :NumericExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_9, "114.9", [:seq, "IN", :ExpressionList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RelationalExpression_10, "114.10", [:seq, "NOT", "IN", :ExpressionList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NumericExpression, "115", [:seq, :AdditiveExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:AdditiveExpression, "116", [:seq, :MultiplicativeExpression, :_AdditiveExpression_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_1, "116.1", [:star, :_AdditiveExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_2, "116.2", [:alt, :_AdditiveExpression_3, :_AdditiveExpression_4, :_AdditiveExpression_5]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_3, "116.3", [:seq, "+", :MultiplicativeExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_4, "116.4", [:seq, "-", :MultiplicativeExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_5, "116.5", [:seq, :_AdditiveExpression_6, :_AdditiveExpression_7]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_6, "116.6", [:alt, :NumericLiteralPositive, :NumericLiteralNegative]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_7, "116.7", [:opt, :_AdditiveExpression_8]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_8, "116.8", [:alt, :_AdditiveExpression_9, :_AdditiveExpression_10]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_9, "116.9", [:seq, "*", :UnaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_AdditiveExpression_10, "116.10", [:seq, "/", :UnaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:MultiplicativeExpression, "117", [:seq, :UnaryExpression, :_MultiplicativeExpression_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_MultiplicativeExpression_1, "117.1", [:star, :_MultiplicativeExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_MultiplicativeExpression_2, "117.2", [:alt, :_MultiplicativeExpression_3, :_MultiplicativeExpression_4]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_MultiplicativeExpression_3, "117.3", [:seq, "*", :UnaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_MultiplicativeExpression_4, "117.4", [:seq, "/", :UnaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:UnaryExpression, "118", [:alt, :_UnaryExpression_1, :_UnaryExpression_2, :_UnaryExpression_3, :PrimaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_UnaryExpression_1, "118.1", [:seq, "!", :PrimaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_UnaryExpression_2, "118.2", [:seq, "+", :PrimaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_UnaryExpression_3, "118.3", [:seq, "-", :PrimaryExpression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PrimaryExpression, "119", [:alt, :BrackettedExpression, :BuiltInCall, :iriOrFunction, :RDFLiteral, :NumericLiteral, :BooleanLiteral, :Var]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BrackettedExpression, "120", [:seq, "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BuiltInCall, "121", [:alt, :Aggregate, :_BuiltInCall_1, :_BuiltInCall_2, :_BuiltInCall_3, :_BuiltInCall_4, :_BuiltInCall_5, :_BuiltInCall_6, :_BuiltInCall_7, :_BuiltInCall_8, :_BuiltInCall_9, :_BuiltInCall_10, :_BuiltInCall_11, :_BuiltInCall_12, :_BuiltInCall_13, :_BuiltInCall_14, :SubstringExpression, :_BuiltInCall_15, :StrReplaceExpression, :_BuiltInCall_16, :_BuiltInCall_17, :_BuiltInCall_18, :_BuiltInCall_19, :_BuiltInCall_20, :_BuiltInCall_21, :_BuiltInCall_22, :_BuiltInCall_23, :_BuiltInCall_24, :_BuiltInCall_25, :_BuiltInCall_26, :_BuiltInCall_27, :_BuiltInCall_28, :_BuiltInCall_29, :_BuiltInCall_30, :_BuiltInCall_31, :_BuiltInCall_32, :_BuiltInCall_33, :_BuiltInCall_34, :_BuiltInCall_35, :_BuiltInCall_36, :_BuiltInCall_37, :_BuiltInCall_38, :_BuiltInCall_39, :_BuiltInCall_40, :_BuiltInCall_41, :_BuiltInCall_42, :_BuiltInCall_43, :_BuiltInCall_44, :_BuiltInCall_45, :_BuiltInCall_46, :_BuiltInCall_47, :_BuiltInCall_48, :_BuiltInCall_49, :_BuiltInCall_50, :RegexExpression, :ExistsFunc, :NotExistsFunc]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_1, "121.1", [:seq, "STR", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_2, "121.2", [:seq, "LANG", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_3, "121.3", [:seq, "LANGMATCHES", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_4, "121.4", [:seq, "DATATYPE", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_5, "121.5", [:seq, "BOUND", "(", :Var, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_6, "121.6", [:seq, "IRI", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_7, "121.7", [:seq, "URI", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_8, "121.8", [:seq, "BNODE", :_BuiltInCall_51]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_51, "121.51", [:alt, :_BuiltInCall_52, :NIL]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_52, "121.52", [:seq, "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_9, "121.9", [:seq, "RAND", :NIL]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_10, "121.10", [:seq, "ABS", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_11, "121.11", [:seq, "CEIL", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_12, "121.12", [:seq, "FLOOR", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_13, "121.13", [:seq, "ROUND", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_14, "121.14", [:seq, "CONCAT", :ExpressionList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_15, "121.15", [:seq, "STRLEN", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_16, "121.16", [:seq, "UCASE", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_17, "121.17", [:seq, "LCASE", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_18, "121.18", [:seq, "ENCODE_FOR_URI", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_19, "121.19", [:seq, "CONTAINS", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_20, "121.20", [:seq, "STRSTARTS", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_21, "121.21", [:seq, "STRENDS", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_22, "121.22", [:seq, "STRBEFORE", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_23, "121.23", [:seq, "STRAFTER", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_24, "121.24", [:seq, "YEAR", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_25, "121.25", [:seq, "MONTH", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_26, "121.26", [:seq, "DAY", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_27, "121.27", [:seq, "HOURS", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_28, "121.28", [:seq, "MINUTES", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_29, "121.29", [:seq, "SECONDS", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_30, "121.30", [:seq, "TIMEZONE", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_31, "121.31", [:seq, "TZ", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_32, "121.32", [:seq, "NOW", :NIL]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_33, "121.33", [:seq, "UUID", :NIL]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_34, "121.34", [:seq, "STRUUID", :NIL]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_35, "121.35", [:seq, "MD5", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_36, "121.36", [:seq, "SHA1", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_37, "121.37", [:seq, "SHA224", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_38, "121.38", [:seq, "SHA256", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_39, "121.39", [:seq, "SHA384", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_40, "121.40", [:seq, "SHA512", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_41, "121.41", [:seq, "COALESCE", :ExpressionList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_42, "121.42", [:seq, "IF", "(", :Expression, ",", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_43, "121.43", [:seq, "STRLANG", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_44, "121.44", [:seq, "STRDT", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_45, "121.45", [:seq, "sameTerm", "(", :Expression, ",", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_46, "121.46", [:seq, "isIRI", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_47, "121.47", [:seq, "isURI", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_48, "121.48", [:seq, "isBLANK", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_49, "121.49", [:seq, "isLITERAL", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BuiltInCall_50, "121.50", [:seq, "isNUMERIC", "(", :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:RegexExpression, "122", [:seq, "REGEX", "(", :Expression, ",", :Expression, :_RegexExpression_1, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RegexExpression_1, "122.1", [:opt, :_RegexExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RegexExpression_2, "122.2", [:seq, ",", :Expression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:SubstringExpression, "123", [:seq, "SUBSTR", "(", :Expression, ",", :Expression, :_SubstringExpression_1, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SubstringExpression_1, "123.1", [:opt, :_SubstringExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_SubstringExpression_2, "123.2", [:seq, ",", :Expression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:StrReplaceExpression, "124", [:seq, "REPLACE", "(", :Expression, ",", :Expression, ",", :Expression, :_StrReplaceExpression_1, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_StrReplaceExpression_1, "124.1", [:opt, :_StrReplaceExpression_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_StrReplaceExpression_2, "124.2", [:seq, ",", :Expression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ExistsFunc, "125", [:seq, "EXISTS", :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NotExistsFunc, "126", [:seq, "NOT", "EXISTS", :GroupGraphPattern]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:Aggregate, "127", [:alt, :_Aggregate_1, :_Aggregate_2, :_Aggregate_3, :_Aggregate_4, :_Aggregate_5, :_Aggregate_6, :_Aggregate_7]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_1, "127.1", [:seq, "COUNT", "(", :_Aggregate_8, :_Aggregate_9, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_8, "127.8", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_9, "127.9", [:alt, "*", :Expression]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_2, "127.2", [:seq, "SUM", "(", :_Aggregate_10, :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_10, "127.10", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_3, "127.3", [:seq, "MIN", "(", :_Aggregate_11, :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_11, "127.11", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_4, "127.4", [:seq, "MAX", "(", :_Aggregate_12, :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_12, "127.12", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_5, "127.5", [:seq, "AVG", "(", :_Aggregate_13, :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_13, "127.13", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_6, "127.6", [:seq, "SAMPLE", "(", :_Aggregate_14, :Expression, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_14, "127.14", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_7, "127.7", [:seq, "GROUP_CONCAT", "(", :_Aggregate_15, :Expression, :_Aggregate_16, ")"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_15, "127.15", [:opt, "DISTINCT"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_16, "127.16", [:opt, :_Aggregate_17]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_Aggregate_17, "127.17", [:seq, ";", "SEPARATOR", "=", :String]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:iriOrFunction, "128", [:seq, :iri, :_iriOrFunction_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_iriOrFunction_1, "128.1", [:opt, :ArgList]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:RDFLiteral, "129", [:seq, :String, :_RDFLiteral_1]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RDFLiteral_1, "129.1", [:opt, :_RDFLiteral_2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RDFLiteral_2, "129.2", [:alt, :LANGTAG, :_RDFLiteral_3]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_RDFLiteral_3, "129.3", [:seq, "^^", :iri]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NumericLiteral, "130", [:alt, :NumericLiteralUnsigned, :NumericLiteralPositive, :NumericLiteralNegative]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NumericLiteralUnsigned, "131", [:alt, :INTEGER, :DECIMAL, :DOUBLE]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NumericLiteralPositive, "132", [:alt, :INTEGER_POSITIVE, :DECIMAL_POSITIVE, :DOUBLE_POSITIVE]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NumericLiteralNegative, "133", [:alt, :INTEGER_NEGATIVE, :DECIMAL_NEGATIVE, :DOUBLE_NEGATIVE]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BooleanLiteral, "134", [:alt, "true", "false"]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:String, "135", [:alt, :STRING_LITERAL1, :STRING_LITERAL2, :STRING_LITERAL_LONG1, :STRING_LITERAL_LONG2]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:iri, "136", [:alt, :IRIREF, :PrefixedName]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PrefixedName, "137", [:alt, :PNAME_LN, :PNAME_NS]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BlankNode, "138", [:alt, :BLANK_NODE_LABEL, :ANON]).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:IRIREF, "139", [:seq, "<", :_IRIREF_1], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_IRIREF_1, "139.1", [:range, "^#x00-#x20<>\"{}|^`] | UCHAR)* '>'"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PNAME_NS, "140", [:seq, :_PNAME_NS_1, ":"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PNAME_NS_1, "140.1", [:opt, :PN_PREFIX], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PNAME_LN, "141", [:seq, :PNAME_NS, :PN_LOCAL], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:BLANK_NODE_LABEL, "142", [:seq, "_:", :_BLANK_NODE_LABEL_1, :_BLANK_NODE_LABEL_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BLANK_NODE_LABEL_1, "142.1", [:alt, :PN_CHARS_U, :_BLANK_NODE_LABEL_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BLANK_NODE_LABEL_3, "142.3", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BLANK_NODE_LABEL_2, "142.2", [:opt, :_BLANK_NODE_LABEL_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BLANK_NODE_LABEL_4, "142.4", [:seq, :_BLANK_NODE_LABEL_5, :PN_CHARS], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BLANK_NODE_LABEL_5, "142.5", [:star, :_BLANK_NODE_LABEL_6], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_BLANK_NODE_LABEL_6, "142.6", [:alt, :PN_CHARS, "."], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:VAR1, "143", [:seq, "?", :VARNAME], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:VAR2, "144", [:seq, "$", :VARNAME], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:LANGTAG, "145", [:seq, "@", :_LANGTAG_1, :_LANGTAG_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LANGTAG_1, "145.1", [:plus, :_LANGTAG_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LANGTAG_3, "145.3", [:range, "a-zA-Z"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LANGTAG_2, "145.2", [:star, :_LANGTAG_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LANGTAG_4, "145.4", [:seq, "-", :_LANGTAG_5], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LANGTAG_5, "145.5", [:plus, :_LANGTAG_6], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_LANGTAG_6, "145.6", [:range, "a-zA-Z0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:INTEGER, "146", [:plus, :_INTEGER_1], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_INTEGER_1, "146.1", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DECIMAL, "147", [:seq, :_DECIMAL_1, ".", :_DECIMAL_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DECIMAL_1, "147.1", [:star, :_DECIMAL_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DECIMAL_3, "147.3", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DECIMAL_2, "147.2", [:plus, :_DECIMAL_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DECIMAL_4, "147.4", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DOUBLE, "148", [:alt, :_DOUBLE_1, :_DOUBLE_2, :_DOUBLE_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_1, "148.1", [:seq, :_DOUBLE_4, ".", :_DOUBLE_5, :EXPONENT], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_4, "148.4", [:plus, :_DOUBLE_6], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_6, "148.6", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_5, "148.5", [:star, :_DOUBLE_7], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_7, "148.7", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_2, "148.2", [:seq, ".", :_DOUBLE_8, :EXPONENT], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_8, "148.8", [:plus, :_DOUBLE_9], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_9, "148.9", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_3, "148.3", [:seq, :_DOUBLE_10, :EXPONENT], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_10, "148.10", [:plus, :_DOUBLE_11], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_DOUBLE_11, "148.11", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:INTEGER_POSITIVE, "149", [:seq, "+", :INTEGER], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DECIMAL_POSITIVE, "150", [:seq, "+", :DECIMAL], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DOUBLE_POSITIVE, "151", [:seq, "+", :DOUBLE], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:INTEGER_NEGATIVE, "152", [:seq, "-", :INTEGER], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DECIMAL_NEGATIVE, "153", [:seq, "-", :DECIMAL], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:DOUBLE_NEGATIVE, "154", [:seq, "-", :DOUBLE], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:EXPONENT, "155", [:seq, :_EXPONENT_1, :_EXPONENT_2, :_EXPONENT_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_EXPONENT_1, "155.1", [:range, "eE"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_EXPONENT_2, "155.2", [:opt, :_EXPONENT_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_EXPONENT_4, "155.4", [:range, "+-"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_EXPONENT_3, "155.3", [:plus, :_EXPONENT_5], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_EXPONENT_5, "155.5", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:STRING_LITERAL1, "156", [:seq, "'", :_STRING_LITERAL1_1, "'"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL1_1, "156.1", [:star, :_STRING_LITERAL1_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL1_2, "156.2", [:alt, :_STRING_LITERAL1_3, :ECHAR], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL1_3, "156.3", [:range, "^#x27#x5C#xA#xD"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:STRING_LITERAL2, "157", [:seq, "\"", :_STRING_LITERAL2_1, "\""], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL2_1, "157.1", [:star, :_STRING_LITERAL2_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL2_2, "157.2", [:alt, :_STRING_LITERAL2_3, :ECHAR], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL2_3, "157.3", [:range, "^#x22#x5C#xA#xD"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:STRING_LITERAL_LONG1, "158", [:seq, "'''", :_STRING_LITERAL_LONG1_1], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG1_1, "158.1", [:seq, :_STRING_LITERAL_LONG1_2, :_STRING_LITERAL_LONG1_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG1_2, "158.2", [:opt, :_STRING_LITERAL_LONG1_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG1_4, "158.4", [:alt, "'", "''"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG1_3, "158.3", [:range, "^'] | ECHAR ) )* \"'''\""], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:STRING_LITERAL_LONG2, "159", [:seq, "\"\"\"", :_STRING_LITERAL_LONG2_1], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG2_1, "159.1", [:seq, :_STRING_LITERAL_LONG2_2, :_STRING_LITERAL_LONG2_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG2_2, "159.2", [:opt, :_STRING_LITERAL_LONG2_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG2_4, "159.4", [:alt, "\"", "\"\""], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_STRING_LITERAL_LONG2_3, "159.3", [:range, "^\"] | ECHAR ) )* '\"\"\"'"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ECHAR, "160", [:seq, "\\", :_ECHAR_1], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ECHAR_1, "160.1", [:range, "tbnrf\"'"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:NIL, "161", [:seq, "(", :_NIL_1, ")"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_NIL_1, "161.1", [:star, :WS], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:WS, "162", [:alt, :_WS_1, :_WS_2, :_WS_3, :_WS_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_WS_1, "162.1", [:hex, "#x20"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_WS_2, "162.2", [:hex, "#x9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_WS_3, "162.3", [:hex, "#xD"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_WS_4, "162.4", [:hex, "#xA"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:ANON, "163", [:seq, "[", :_ANON_1, "]"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_ANON_1, "163.1", [:star, :WS], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PN_CHARS_BASE, "164", [:alt, :_PN_CHARS_BASE_1, :_PN_CHARS_BASE_2, :_PN_CHARS_BASE_3, :_PN_CHARS_BASE_4, :_PN_CHARS_BASE_5, :_PN_CHARS_BASE_6, :_PN_CHARS_BASE_7, :_PN_CHARS_BASE_8, :_PN_CHARS_BASE_9, :_PN_CHARS_BASE_10, :_PN_CHARS_BASE_11, :_PN_CHARS_BASE_12, :_PN_CHARS_BASE_13, :_PN_CHARS_BASE_14], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_1, "164.1", [:range, "A-Z"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_2, "164.2", [:range, "a-z"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_3, "164.3", [:range, "#x00C0-#x00D6"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_4, "164.4", [:range, "#x00D8-#x00F6"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_5, "164.5", [:range, "#x00F8-#x02FF"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_6, "164.6", [:range, "#x0370-#x037D"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_7, "164.7", [:range, "#x037F-#x1FFF"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_8, "164.8", [:range, "#x200C-#x200D"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_9, "164.9", [:range, "#x2070-#x218F"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_10, "164.10", [:range, "#x2C00-#x2FEF"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_11, "164.11", [:range, "#x3001-#xD7FF"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_12, "164.12", [:range, "#xF900-#xFDCF"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_13, "164.13", [:range, "#xFDF0-#xFFFD"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_BASE_14, "164.14", [:range, "#x10000-#xEFFFF"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PN_CHARS_U, "165", [:alt, :PN_CHARS_BASE, "_"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:VARNAME, "166", [:seq, :_VARNAME_1, :_VARNAME_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_1, "166.1", [:alt, :PN_CHARS_U, :_VARNAME_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_3, "166.3", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_2, "166.2", [:star, :_VARNAME_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_4, "166.4", [:alt, :PN_CHARS_U, :_VARNAME_5, :_VARNAME_6, :_VARNAME_7, :_VARNAME_8], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_5, "166.5", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_6, "166.6", [:hex, "#x00B7"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_7, "166.7", [:range, "#x0300-#x036F"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_VARNAME_8, "166.8", [:range, "#x203F-#x2040"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PN_CHARS, "167", [:alt, :PN_CHARS_U, "-", :_PN_CHARS_1, :_PN_CHARS_2, :_PN_CHARS_3, :_PN_CHARS_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_1, "167.1", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_2, "167.2", [:hex, "#x00B7"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_3, "167.3", [:range, "#x0300-#x036F"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_CHARS_4, "167.4", [:range, "#x203F-#x2040"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PN_PREFIX, "168", [:seq, :PN_CHARS_BASE, :_PN_PREFIX_1], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_PREFIX_1, "168.1", [:opt, :_PN_PREFIX_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_PREFIX_2, "168.2", [:seq, :_PN_PREFIX_3, :PN_CHARS], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_PREFIX_3, "168.3", [:star, :_PN_PREFIX_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_PREFIX_4, "168.4", [:alt, :PN_CHARS, "."], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PN_LOCAL, "169", [:seq, :_PN_LOCAL_1, :_PN_LOCAL_2], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_LOCAL_1, "169.1", [:alt, :PN_CHARS_U, :_PN_LOCAL_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_LOCAL_3, "169.3", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_LOCAL_2, "169.2", [:opt, :_PN_LOCAL_4], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_LOCAL_4, "169.4", [:seq, :_PN_LOCAL_5, :PN_CHARS], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_LOCAL_5, "169.5", [:star, :_PN_LOCAL_6], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_LOCAL_6, "169.6", [:alt, :PN_CHARS, "."], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PLX, "170", [:alt, :PERCENT, :PN_LOCAL_ESC], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PERCENT, "171", [:seq, "%", :HEX, :HEX], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:HEX, "172", [:alt, :_HEX_1, :_HEX_2, :_HEX_3], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_HEX_1, "172.1", [:range, "0-9"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_HEX_2, "172.2", [:range, "A-F"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_HEX_3, "172.3", [:range, "a-f"], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:PN_LOCAL_ESC, "173", [:seq, "\\", :_PN_LOCAL_ESC_1], kind: :terminal).extend(EBNF::PEG::Rule),
    EBNF::Rule.new(:_PN_LOCAL_ESC_1, "173.1", [:alt, "_", "~", ".", "-", "!", "$", "&", "'", "(", ")", "*", "+", ",", ";", "=", "/", "?", "#", "@", "%"], kind: :terminal).extend(EBNF::PEG::Rule),
  ]
end

